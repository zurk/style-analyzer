# Model report for {{ model.ptr|join(" ") }}

### Dump

```json
{{ model }}
```

{% set data = {} %}
{% for language in languages %}
## {{ language }}
    {% set scns = namespace(min_support=1000000000000, max_support=-1, min_conf=1, max_conf=0) %}
    {% set rules = model[language].filter_by_confidence(
        analyze_config[language]["confidence_threshold"]).filter_by_support(
        analyze_config[language]["support_threshold"]) %}
    {% for rule in rules.rules %}
        {% set scns.min_support = (scns.min_support, rule.stats.support)|min %}
        {% set scns.max_support = (scns.max_support, rule.stats.support)|max %}
        {% set scns.min_conf = (scns.min_conf, rule.stats.conf)|min %}
        {% set scns.max_conf = (scns.max_conf, rule.stats.conf)|max %}
    {% endfor %}
    {% do data.__setitem__(language, {
        "min_support": scns.min_support,
        "max_support": scns.max_support,
        "min_conf": scns.min_conf,
        "max_conf": scns.max_conf,
        "num_rules": rules|length,
        "avg_rule_len": rules.avg_rule_len,
    }) %}
### Summary
{{ rules }}

| | |
|-|-|
|Min support|{{ scns.min_support }}|
|Max support|{{ scns.max_support }}|
|Min confidence|{{ scns.min_conf }}|
|Max confidence|{{ scns.max_conf }}|

### Configuration

```json
    {% set cfg = rules.origin_config|deepcopy %}
    {% do cfg["feature_extractor"].__setitem__("label_composites", "<cut>") %}
    {% do cfg["feature_extractor"].__setitem__("selected_features", "<cut>") %}
{{ cfg|pformat(width=100) }}
```

### Rules

| rule number | description |
|----:|:-----|
{% set fe = FeatureExtractor(language=language, **rules.origin_config["feature_extractor"]) %}
{% for rule in rules.rules %}
| {{ loop.index }} | `{{ describe_rule(rule, fe).replace("\n", "<br>") }}` |
{% endfor %}

### Note
All statistics are calculated with respect to the "analyze" config. This means that the rules were filtered by
`confidence_threshold` and `support_threshold` values.

{% endfor %}{# languages #}
<details>
    <summary>Machine-readable report</summary>
```json
{{ data | tojson }}
```
</details>
